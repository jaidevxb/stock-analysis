[
  {
    "id": 1,
    "question": "Find the highest closing price of 20MICRONS in January 2013.",
    "output": "Highest closing price of 20MICRONS in January 2013: 78.1",
    "sql": "SELECT MAX(Close) as highest_close\n    FROM stocks\n    WHERE Stock = '20MICRONS'\n    AND Date LIKE '2013-01%'"
  },
  {
    "id": 2,
    "question": "List all days where the closing price was higher than the opening price.",
    "output": "704",
    "sql": "SELECT COUNT(*) as days_count\n    FROM stocks\n    WHERE Stock = '20MICRONS'\n    AND Close > Open"
  },
  {
    "id": 3,
    "question": "Calculate the average daily volume in January 2013.",
    "output": "914223.6818181818",
    "sql": "SELECT AVG(Volume) as avg_volume\n    FROM stocks\n    WHERE Stock = '20MICRONS'\n    AND Date LIKE '2013-01%'"
  },
  {
    "id": 4,
    "question": "Find the first and last closing price of January 2013.",
    "output": "77.8, 68.8",
    "sql": "SELECT \n        (SELECT Close FROM stocks WHERE Stock = '20MICRONS' AND Date LIKE '2013-01%' ORDER BY Date ASC LIMIT 1) as first_close,\n        (SELECT Close FROM stocks WHERE Stock = '20MICRONS' AND Date LIKE '2013-01%' ORDER BY Date DESC LIMIT 1) as last_close"
  },
  {
    "id": 5,
    "question": "Get all records where daily change percentage was positive.",
    "output": "955",
    "sql": "SELECT COUNT(*) as positive_days\n    FROM stocks\n    WHERE Stock = '20MICRONS'\n    AND Change_Pct > 0"
  },
  {
    "id": 6,
    "question": "Find the day with the largest daily price range (High - Low).",
    "output": "Date: 2013-02-07, Range: 14.650000000000006",
    "sql": "SELECT Date, (High - Low) as range\n    FROM stocks\n    WHERE Stock = '20MICRONS'\n    ORDER BY range DESC\n    LIMIT 1"
  },
  {
    "id": 7,
    "question": "Calculate the average 'Change Pct' for each week (assuming you can extract week from date).",
    "output": "Week: 2013-00      Average Change Pct: -1.93\nWeek: 2013-01      Average Change Pct: -0.48\nWeek: 2013-02      Average Change Pct: 0.57\nWeek: 2013-03      Average Change Pct: -2.08\nWeek: 2013-04      Average Change Pct: 0.29",
    "sql": "SELECT \n        strftime('%Y', Date) || '-' || strftime('%W', Date) as week,\n        AVG(Change_Pct) as avg_change_pct\n    FROM stocks\n    WHERE Stock = '20MICRONS'\n    AND Date LIKE '2013-01%'\n    GROUP BY strftime('%Y', Date), strftime('%W', Date)\n    ORDER BY Date"
  },
  {
    "id": 8,
    "question": "Compute the cumulative average closing price over time using a window function.",
    "output": "37.79",
    "sql": "SELECT \n        Date,\n        Close,\n        AVG(Close) OVER (ORDER BY Date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as cumulative_avg\n    FROM stocks\n    WHERE Stock = '20MICRONS'\n    ORDER BY Date DESC\n    LIMIT 1"
  },
  {
    "id": 9,
    "question": "Find the top 3 days by trading volume in January 2013.",
    "output": "Date: 2013-01-25, Volume: 2921352\nDate: 2013-01-28, Volume: 2661516\nDate: 2013-01-18, Volume: 2354266",
    "sql": "SELECT Date, Volume\n    FROM stocks\n    WHERE Stock = '20MICRONS'\n    AND Date LIKE '2013-01%'\n    ORDER BY Volume DESC\n    LIMIT 3"
  },
  {
    "id": 10,
    "question": "Determine how many up-days and down-days occurred in the dataset.",
    "output": "Type: Up-days     Count: 704\nType: Down-days   Count: 1465",
    "sql": "SELECT \n        SUM(CASE WHEN Close > Open THEN 1 ELSE 0 END) as up_days,\n        SUM(CASE WHEN Close < Open THEN 1 ELSE 0 END) as down_days\n    FROM stocks\n    WHERE Stock = '20MICRONS'"
  },
  {
    "id": 11,
    "question": "Compute the 5-day moving average of closing prices.",
    "output": "74.62",
    "sql": "SELECT \n        Date,\n        Close,\n        AVG(Close) OVER (ORDER BY Date ROWS BETWEEN 4 PRECEDING AND CURRENT ROW) as moving_avg_5day\n    FROM stocks\n    WHERE Stock = '20MICRONS'\n    ORDER BY Date DESC\n    LIMIT 1"
  },
  {
    "id": 12,
    "question": "Find all days where the closing price was above the 5-day moving average.",
    "output": "943",
    "sql": "SELECT COUNT(*) \n    FROM (\n        SELECT \n            date, \n            close,\n            AVG(close) OVER (ORDER BY date ROWS 4 PRECEDING) as moving_avg_5day\n        FROM stocks \n        WHERE stock = '20MICRONS'\n    )\n    WHERE close > moving_avg_5day"
  },
  {
    "id": 13,
    "question": "Calculate the daily volatility as (High - Low)/Open, and find the 5 most volatile days.",
    "output": "Date: 2020-03-12, Volatility: 0.2769\nDate: 2020-03-13, Volatility: 0.2699\nDate: 2015-10-14, Volatility: 0.2239\nDate: 2020-04-15, Volatility: 0.2180\nDate: 2021-05-18, Volatility: 0.2154",
    "sql": "SELECT \n        Date,\n        (High - Low) / Open as volatility\n    FROM stocks\n    WHERE Stock = '20MICRONS'\n    ORDER BY volatility DESC\n    LIMIT 5"
  },
  {
    "id": 14,
    "question": "Compute the correlation between daily volume and change percentage.",
    "output": "0.3138",
    "sql": "SELECT \n        (COUNT(*) * SUM(Volume * Change_Pct) - SUM(Volume) * SUM(Change_Pct)) / \n        (SQRT(COUNT(*) * SUM(Volume * Volume) - SUM(Volume) * SUM(Volume)) * \n         SQRT(COUNT(*) * SUM(Change_Pct * Change_Pct) - SUM(Change_Pct) * SUM(Change_Pct))) \n        as correlation\n    FROM stocks\n    WHERE Stock = '20MICRONS'"
  },
  {
    "id": 15,
    "question": "Find the maximum drawdown (largest peak-to-trough fall in Close).",
    "output": "74.52",
    "sql": "SELECT \n        MAX((running_max - Close) / running_max * 100) as max_drawdown_pct\n    FROM (\n        SELECT \n            Date,\n            Close,\n            MAX(Close) OVER (ORDER BY Date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as running_max\n        FROM stocks\n        WHERE Stock = '20MICRONS'\n    )"
  },
  {
    "id": 16,
    "question": "Find streaks of consecutive up-days (where Close > previous Close).",
    "output": "7",
    "sql": "WITH up_days AS (\n        SELECT \n            Date,\n            Close,\n            LAG(Close) OVER (ORDER BY Date) as prev_close,\n            CASE WHEN Close > LAG(Close) OVER (ORDER BY Date) THEN 1 ELSE 0 END as is_up\n        FROM stocks\n        WHERE Stock = '20MICRONS'\n    ),\n    streak_groups AS (\n        SELECT \n            Date,\n            Close,\n            is_up,\n            SUM(CASE WHEN is_up = 0 THEN 1 ELSE 0 END) OVER (ORDER BY Date) as streak_group\n        FROM up_days\n    ),\n    streaks AS (\n        SELECT \n            COUNT(*) as streak_length\n        FROM streak_groups\n        WHERE is_up = 1\n        GROUP BY streak_group\n    )\n    SELECT MAX(streak_length)\n    FROM streaks"
  },
  {
    "id": 17,
    "question": "Rank all days by volume using a window function and find the 10th highest-volume day.",
    "output": "Date: 2013-01-28, Volume: 2661516",
    "sql": "SELECT Date, Volume\n    FROM (\n        SELECT \n            Date,\n            Volume,\n            RANK() OVER (ORDER BY Volume DESC) as volume_rank\n        FROM stocks\n        WHERE Stock = '20MICRONS'\n    )\n    WHERE volume_rank = 10"
  },
  {
    "id": 18,
    "question": "Compare average volume on up-days vs down-days.",
    "output": "Type: Up             Average Volume: 196456.03\nType: Down           Average Volume: 104826.35",
    "sql": "SELECT \n        AVG(CASE WHEN Close > Open THEN Volume ELSE NULL END) as avg_volume_up_days,\n        AVG(CASE WHEN Close < Open THEN Volume ELSE NULL END) as avg_volume_down_days\n    FROM stocks\n    WHERE Stock = '20MICRONS'"
  },
  {
    "id": 19,
    "question": "Compute the percentage of days where closing price was within 1% of the day's high.",
    "output": "Percentage of days where close was within 1% of high: 11.44%",
    "sql": "SELECT \n        (COUNT(CASE WHEN Close >= High * 0.99 THEN 1 END) * 100.0 / COUNT(*)) as percentage\n    FROM stocks\n    WHERE Stock = '20MICRONS'"
  },
  {
    "id": 20,
    "question": "Identify potential breakout days \u2014 days where Close > previous High and Change Pct > 2%.",
    "output": "223",
    "sql": "SELECT COUNT(*) \n    FROM (\n        SELECT \n            Date,\n            Close,\n            High as current_high,\n            LAG(High) OVER (ORDER BY Date) as previous_high,\n            Change_Pct\n        FROM stocks\n        WHERE Stock = '20MICRONS'\n    )\n    WHERE Close > previous_high\n        AND Change_Pct > 2"
  }
]